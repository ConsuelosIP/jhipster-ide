/*
 * generated by Xtext 2.10.0
 */
package io.github.jhipster.jdl.formatting2

import com.google.inject.Inject
import io.github.jhipster.jdl.jdl.JdlDomainModel
import io.github.jhipster.jdl.jdl.JdlEntity
import io.github.jhipster.jdl.jdl.JdlEntityField
import io.github.jhipster.jdl.jdl.JdlFeature
import io.github.jhipster.jdl.services.JDLGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class JDLFormatter extends AbstractFormatter2 {
	
	@Inject extension JDLGrammarAccess

	def dispatch void format(JdlDomainModel jdlDomainModel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (JdlFeature features : jdlDomainModel.getFeatures()) {
			features.format;
		}
	}

	def dispatch void format(JdlEntity jdlEntity, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (JdlEntityField fields : jdlEntity.getFields()) {
			fields.format;
		}
	}
	
	// TODO: implement for JdlEntityField, JdlFieldType, JdlStringValidators, JdlNumericValidators, JdlBlobValidators, JdlRelationships, JdlRelationship, JdlOption, JdlWithEntityInclusion, JdlForEntityInclusion
}
