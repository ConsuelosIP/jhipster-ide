/*
 * generated by Xtext 2.10.0
 */
package io.github.jhipster.jdl.dsl.formatting2

import com.google.inject.Inject
import io.github.jhipster.jdl.dsl.jdl.JdlDomainModel
import io.github.jhipster.jdl.dsl.jdl.JdlEntity
import io.github.jhipster.jdl.dsl.jdl.JdlEntityField
import io.github.jhipster.jdl.dsl.jdl.JdlFeature
import io.github.jhipster.jdl.dsl.services.JDLGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class JDLFormatter extends AbstractFormatter2 {
	
	@Inject extension JDLGrammarAccess

	def dispatch void format(JdlDomainModel domainModel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (JdlFeature feature : domainModel.features) {
			feature.format;
		}
	}

	def dispatch void format(JdlEntity entity, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (JdlEntityField fields : entity.getFields()) {
			fields.format;
		}
	}
	
	// TODO: implement for StringField, IntegerField, LongField, BigDecimalField, FloatField, DoubleField, BooleanField, LocalDateField, ZonedDateTimeField, BlobField, AnyBlobField, ImageBlobField, StringValidators, NumericValidators, BlobValidators, Relationships, Relationship
}
