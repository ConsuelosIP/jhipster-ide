grammar io.github.jhipster.jdl.dsl.JDL with org.eclipse.xtext.common.Terminals

generate jdl "http://www.github.io/jhipster/jdl/dsl/JDL"

DomainModel:
	entities+=Entity* | relationships+=Relationships*;

/* =========================================================================
 * ENTITY
 * ========================================================================= */
Entity:
	"entity" name=ID "{"
		fields+=Fields*
	"}";

Fields:
	StringField | IntegerField;

StringField:
	name=ID "String" validators?=StringValidators;

IntegerField:
	name=ID "Integer" validators?=IntegerValidators;

RequiredValidator:
	"required";
	
MinLengthValidator:
	"minlength("value=INT")";
	
MaxLengthValidator:
	"maxlength("value=INT")";
	
PatternValidator:
	"pattern("value=STRING")";

MinValidator:
	"min("value=INT")";

MaxValidator:
	"max("value=INT")";
		
StringValidators:
	(required?=RequiredValidator) (minLength?=MinLengthValidator) (maxlength?=MaxLengthValidator) (pattern?=PatternValidator)
;

IntegerValidators:
	(required?=RequiredValidator) (minLength?=MinValidator) (maxlength?=MaxValidator);
	
/* =========================================================================
 * RELATIONSHIP
 * ========================================================================= */
Relationships:
	"relationship" cardinality=Cardinality "{"
		relationships+=Relationship*
	"}";

Relationship:
	fromEntity=Entity fromName=RelationshipName?  "to" toEntity=Entity toName=RelationshipName?;
	
RelationshipName:
	"{" name=ID "}";
	
enum Cardinality:
	OneToMany | ManyToOne| OneToOne | ManyToMany;

/* =========================================================================
 * ENUM
 * ========================================================================= */
Enum:
	"enum" name=ID "{"
		values+=ID ("," values+=ID)*
	"}";

/* =========================================================================
 * GENERATION OPTION
 * ========================================================================= */
GenerationOption: ServiceGenerationOption | DTOGenerationOption | PaginateGenerationOption | AngularSuffixGenerationOption;

ServiceGenerationOption:
	"service" entities+=ID ("," entities+=ID)* "with" serviceType=ServiceType;

enum ServiceType:
	serviceClass | serviceImpl;
	
DTOGenerationOption:
	"dto" entities+=ID ("," entities+=ID)* "with" dtoType=DTOType;

enum DTOType:
	mapstruct;

PaginateGenerationOption:
	"paginate" entities+=ID ("," entities+=ID)* "with" paginateType=PaginateType;

enum PaginateType:
	pagination | infiniteScroll;

AngularSuffixGenerationOption:
	"angularSuffix" entities+=ID ("," entities+=ID)* "with" id=ID;
