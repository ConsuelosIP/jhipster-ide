/**
 * generated by Xtext 2.10.0
 */
package io.github.jhipster.jdl.jdl.impl;

import io.github.jhipster.jdl.jdl.JdlEntityField;
import io.github.jhipster.jdl.jdl.JdlEnumType;
import io.github.jhipster.jdl.jdl.JdlFieldType;
import io.github.jhipster.jdl.jdl.JdlNumericFieldType;
import io.github.jhipster.jdl.jdl.JdlPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Entity Field</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.github.jhipster.jdl.jdl.impl.JdlEntityFieldImpl#getName <em>Name</em>}</li>
 *   <li>{@link io.github.jhipster.jdl.jdl.impl.JdlEntityFieldImpl#getType <em>Type</em>}</li>
 *   <li>{@link io.github.jhipster.jdl.jdl.impl.JdlEntityFieldImpl#getEnumType <em>Enum Type</em>}</li>
 *   <li>{@link io.github.jhipster.jdl.jdl.impl.JdlEntityFieldImpl#isStringType <em>String Type</em>}</li>
 *   <li>{@link io.github.jhipster.jdl.jdl.impl.JdlEntityFieldImpl#getNumericFieldType <em>Numeric Field Type</em>}</li>
 *   <li>{@link io.github.jhipster.jdl.jdl.impl.JdlEntityFieldImpl#isBooleanType <em>Boolean Type</em>}</li>
 *   <li>{@link io.github.jhipster.jdl.jdl.impl.JdlEntityFieldImpl#isLocalDateType <em>Local Date Type</em>}</li>
 *   <li>{@link io.github.jhipster.jdl.jdl.impl.JdlEntityFieldImpl#isZonedDateTimeType <em>Zoned Date Time Type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class JdlEntityFieldImpl extends JdlFieldTypeImpl implements JdlEntityField
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected JdlFieldType type;

  /**
   * The cached value of the '{@link #getEnumType() <em>Enum Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumType()
   * @generated
   * @ordered
   */
  protected JdlEnumType enumType;

  /**
   * The default value of the '{@link #isStringType() <em>String Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isStringType()
   * @generated
   * @ordered
   */
  protected static final boolean STRING_TYPE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isStringType() <em>String Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isStringType()
   * @generated
   * @ordered
   */
  protected boolean stringType = STRING_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getNumericFieldType() <em>Numeric Field Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumericFieldType()
   * @generated
   * @ordered
   */
  protected static final JdlNumericFieldType NUMERIC_FIELD_TYPE_EDEFAULT = JdlNumericFieldType.INTEGER;

  /**
   * The cached value of the '{@link #getNumericFieldType() <em>Numeric Field Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumericFieldType()
   * @generated
   * @ordered
   */
  protected JdlNumericFieldType numericFieldType = NUMERIC_FIELD_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #isBooleanType() <em>Boolean Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBooleanType()
   * @generated
   * @ordered
   */
  protected static final boolean BOOLEAN_TYPE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isBooleanType() <em>Boolean Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBooleanType()
   * @generated
   * @ordered
   */
  protected boolean booleanType = BOOLEAN_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #isLocalDateType() <em>Local Date Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLocalDateType()
   * @generated
   * @ordered
   */
  protected static final boolean LOCAL_DATE_TYPE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isLocalDateType() <em>Local Date Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLocalDateType()
   * @generated
   * @ordered
   */
  protected boolean localDateType = LOCAL_DATE_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #isZonedDateTimeType() <em>Zoned Date Time Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isZonedDateTimeType()
   * @generated
   * @ordered
   */
  protected static final boolean ZONED_DATE_TIME_TYPE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isZonedDateTimeType() <em>Zoned Date Time Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isZonedDateTimeType()
   * @generated
   * @ordered
   */
  protected boolean zonedDateTimeType = ZONED_DATE_TIME_TYPE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected JdlEntityFieldImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JdlPackage.Literals.JDL_ENTITY_FIELD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JdlPackage.JDL_ENTITY_FIELD__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JdlFieldType getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetType(JdlFieldType newType, NotificationChain msgs)
  {
    JdlFieldType oldType = type;
    type = newType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JdlPackage.JDL_ENTITY_FIELD__TYPE, oldType, newType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(JdlFieldType newType)
  {
    if (newType != type)
    {
      NotificationChain msgs = null;
      if (type != null)
        msgs = ((InternalEObject)type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JdlPackage.JDL_ENTITY_FIELD__TYPE, null, msgs);
      if (newType != null)
        msgs = ((InternalEObject)newType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JdlPackage.JDL_ENTITY_FIELD__TYPE, null, msgs);
      msgs = basicSetType(newType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JdlPackage.JDL_ENTITY_FIELD__TYPE, newType, newType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JdlEnumType getEnumType()
  {
    if (enumType != null && enumType.eIsProxy())
    {
      InternalEObject oldEnumType = (InternalEObject)enumType;
      enumType = (JdlEnumType)eResolveProxy(oldEnumType);
      if (enumType != oldEnumType)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, JdlPackage.JDL_ENTITY_FIELD__ENUM_TYPE, oldEnumType, enumType));
      }
    }
    return enumType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JdlEnumType basicGetEnumType()
  {
    return enumType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEnumType(JdlEnumType newEnumType)
  {
    JdlEnumType oldEnumType = enumType;
    enumType = newEnumType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JdlPackage.JDL_ENTITY_FIELD__ENUM_TYPE, oldEnumType, enumType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isStringType()
  {
    return stringType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStringType(boolean newStringType)
  {
    boolean oldStringType = stringType;
    stringType = newStringType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JdlPackage.JDL_ENTITY_FIELD__STRING_TYPE, oldStringType, stringType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JdlNumericFieldType getNumericFieldType()
  {
    return numericFieldType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNumericFieldType(JdlNumericFieldType newNumericFieldType)
  {
    JdlNumericFieldType oldNumericFieldType = numericFieldType;
    numericFieldType = newNumericFieldType == null ? NUMERIC_FIELD_TYPE_EDEFAULT : newNumericFieldType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JdlPackage.JDL_ENTITY_FIELD__NUMERIC_FIELD_TYPE, oldNumericFieldType, numericFieldType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isBooleanType()
  {
    return booleanType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBooleanType(boolean newBooleanType)
  {
    boolean oldBooleanType = booleanType;
    booleanType = newBooleanType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JdlPackage.JDL_ENTITY_FIELD__BOOLEAN_TYPE, oldBooleanType, booleanType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isLocalDateType()
  {
    return localDateType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLocalDateType(boolean newLocalDateType)
  {
    boolean oldLocalDateType = localDateType;
    localDateType = newLocalDateType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JdlPackage.JDL_ENTITY_FIELD__LOCAL_DATE_TYPE, oldLocalDateType, localDateType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isZonedDateTimeType()
  {
    return zonedDateTimeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setZonedDateTimeType(boolean newZonedDateTimeType)
  {
    boolean oldZonedDateTimeType = zonedDateTimeType;
    zonedDateTimeType = newZonedDateTimeType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JdlPackage.JDL_ENTITY_FIELD__ZONED_DATE_TIME_TYPE, oldZonedDateTimeType, zonedDateTimeType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case JdlPackage.JDL_ENTITY_FIELD__TYPE:
        return basicSetType(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JdlPackage.JDL_ENTITY_FIELD__NAME:
        return getName();
      case JdlPackage.JDL_ENTITY_FIELD__TYPE:
        return getType();
      case JdlPackage.JDL_ENTITY_FIELD__ENUM_TYPE:
        if (resolve) return getEnumType();
        return basicGetEnumType();
      case JdlPackage.JDL_ENTITY_FIELD__STRING_TYPE:
        return isStringType();
      case JdlPackage.JDL_ENTITY_FIELD__NUMERIC_FIELD_TYPE:
        return getNumericFieldType();
      case JdlPackage.JDL_ENTITY_FIELD__BOOLEAN_TYPE:
        return isBooleanType();
      case JdlPackage.JDL_ENTITY_FIELD__LOCAL_DATE_TYPE:
        return isLocalDateType();
      case JdlPackage.JDL_ENTITY_FIELD__ZONED_DATE_TIME_TYPE:
        return isZonedDateTimeType();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JdlPackage.JDL_ENTITY_FIELD__NAME:
        setName((String)newValue);
        return;
      case JdlPackage.JDL_ENTITY_FIELD__TYPE:
        setType((JdlFieldType)newValue);
        return;
      case JdlPackage.JDL_ENTITY_FIELD__ENUM_TYPE:
        setEnumType((JdlEnumType)newValue);
        return;
      case JdlPackage.JDL_ENTITY_FIELD__STRING_TYPE:
        setStringType((Boolean)newValue);
        return;
      case JdlPackage.JDL_ENTITY_FIELD__NUMERIC_FIELD_TYPE:
        setNumericFieldType((JdlNumericFieldType)newValue);
        return;
      case JdlPackage.JDL_ENTITY_FIELD__BOOLEAN_TYPE:
        setBooleanType((Boolean)newValue);
        return;
      case JdlPackage.JDL_ENTITY_FIELD__LOCAL_DATE_TYPE:
        setLocalDateType((Boolean)newValue);
        return;
      case JdlPackage.JDL_ENTITY_FIELD__ZONED_DATE_TIME_TYPE:
        setZonedDateTimeType((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JdlPackage.JDL_ENTITY_FIELD__NAME:
        setName(NAME_EDEFAULT);
        return;
      case JdlPackage.JDL_ENTITY_FIELD__TYPE:
        setType((JdlFieldType)null);
        return;
      case JdlPackage.JDL_ENTITY_FIELD__ENUM_TYPE:
        setEnumType((JdlEnumType)null);
        return;
      case JdlPackage.JDL_ENTITY_FIELD__STRING_TYPE:
        setStringType(STRING_TYPE_EDEFAULT);
        return;
      case JdlPackage.JDL_ENTITY_FIELD__NUMERIC_FIELD_TYPE:
        setNumericFieldType(NUMERIC_FIELD_TYPE_EDEFAULT);
        return;
      case JdlPackage.JDL_ENTITY_FIELD__BOOLEAN_TYPE:
        setBooleanType(BOOLEAN_TYPE_EDEFAULT);
        return;
      case JdlPackage.JDL_ENTITY_FIELD__LOCAL_DATE_TYPE:
        setLocalDateType(LOCAL_DATE_TYPE_EDEFAULT);
        return;
      case JdlPackage.JDL_ENTITY_FIELD__ZONED_DATE_TIME_TYPE:
        setZonedDateTimeType(ZONED_DATE_TIME_TYPE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JdlPackage.JDL_ENTITY_FIELD__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case JdlPackage.JDL_ENTITY_FIELD__TYPE:
        return type != null;
      case JdlPackage.JDL_ENTITY_FIELD__ENUM_TYPE:
        return enumType != null;
      case JdlPackage.JDL_ENTITY_FIELD__STRING_TYPE:
        return stringType != STRING_TYPE_EDEFAULT;
      case JdlPackage.JDL_ENTITY_FIELD__NUMERIC_FIELD_TYPE:
        return numericFieldType != NUMERIC_FIELD_TYPE_EDEFAULT;
      case JdlPackage.JDL_ENTITY_FIELD__BOOLEAN_TYPE:
        return booleanType != BOOLEAN_TYPE_EDEFAULT;
      case JdlPackage.JDL_ENTITY_FIELD__LOCAL_DATE_TYPE:
        return localDateType != LOCAL_DATE_TYPE_EDEFAULT;
      case JdlPackage.JDL_ENTITY_FIELD__ZONED_DATE_TIME_TYPE:
        return zonedDateTimeType != ZONED_DATE_TIME_TYPE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", stringType: ");
    result.append(stringType);
    result.append(", numericFieldType: ");
    result.append(numericFieldType);
    result.append(", booleanType: ");
    result.append(booleanType);
    result.append(", localDateType: ");
    result.append(localDateType);
    result.append(", zonedDateTimeType: ");
    result.append(zonedDateTimeType);
    result.append(')');
    return result.toString();
  }

} //JdlEntityFieldImpl
