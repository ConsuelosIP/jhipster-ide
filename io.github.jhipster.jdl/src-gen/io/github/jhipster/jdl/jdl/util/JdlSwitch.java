/**
 * generated by Xtext 2.10.0
 */
package io.github.jhipster.jdl.jdl.util;

import io.github.jhipster.jdl.jdl.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see io.github.jhipster.jdl.jdl.JdlPackage
 * @generated
 */
public class JdlSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static JdlPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JdlSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = JdlPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case JdlPackage.JDL_DOMAIN_MODEL:
      {
        JdlDomainModel jdlDomainModel = (JdlDomainModel)theEObject;
        T result = caseJdlDomainModel(jdlDomainModel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_FEATURE:
      {
        JdlFeature jdlFeature = (JdlFeature)theEObject;
        T result = caseJdlFeature(jdlFeature);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_ENTITY:
      {
        JdlEntity jdlEntity = (JdlEntity)theEObject;
        T result = caseJdlEntity(jdlEntity);
        if (result == null) result = caseJdlFeature(jdlEntity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_ENTITY_FIELD:
      {
        JdlEntityField jdlEntityField = (JdlEntityField)theEObject;
        T result = caseJdlEntityField(jdlEntityField);
        if (result == null) result = caseJdlFieldType(jdlEntityField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_FIELD_TYPE:
      {
        JdlFieldType jdlFieldType = (JdlFieldType)theEObject;
        T result = caseJdlFieldType(jdlFieldType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_STRING_VALIDATORS:
      {
        JdlStringValidators jdlStringValidators = (JdlStringValidators)theEObject;
        T result = caseJdlStringValidators(jdlStringValidators);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_NUMERIC_VALIDATORS:
      {
        JdlNumericValidators jdlNumericValidators = (JdlNumericValidators)theEObject;
        T result = caseJdlNumericValidators(jdlNumericValidators);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_BLOB_VALIDATORS:
      {
        JdlBlobValidators jdlBlobValidators = (JdlBlobValidators)theEObject;
        T result = caseJdlBlobValidators(jdlBlobValidators);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_REQUIRED_VALIDATOR:
      {
        JdlRequiredValidator jdlRequiredValidator = (JdlRequiredValidator)theEObject;
        T result = caseJdlRequiredValidator(jdlRequiredValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_MIN_LENGTH_VALIDATOR:
      {
        JdlMinLengthValidator jdlMinLengthValidator = (JdlMinLengthValidator)theEObject;
        T result = caseJdlMinLengthValidator(jdlMinLengthValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_MAX_LENGTH_VALIDATOR:
      {
        JdlMaxLengthValidator jdlMaxLengthValidator = (JdlMaxLengthValidator)theEObject;
        T result = caseJdlMaxLengthValidator(jdlMaxLengthValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_PATTERN_VALIDATOR:
      {
        JdlPatternValidator jdlPatternValidator = (JdlPatternValidator)theEObject;
        T result = caseJdlPatternValidator(jdlPatternValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_MIN_VALIDATOR:
      {
        JdlMinValidator jdlMinValidator = (JdlMinValidator)theEObject;
        T result = caseJdlMinValidator(jdlMinValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_MAX_VALIDATOR:
      {
        JdlMaxValidator jdlMaxValidator = (JdlMaxValidator)theEObject;
        T result = caseJdlMaxValidator(jdlMaxValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_MIN_BYTES_VALIDATOR:
      {
        JdlMinBytesValidator jdlMinBytesValidator = (JdlMinBytesValidator)theEObject;
        T result = caseJdlMinBytesValidator(jdlMinBytesValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_MAX_BYTES_VALIDATOR:
      {
        JdlMaxBytesValidator jdlMaxBytesValidator = (JdlMaxBytesValidator)theEObject;
        T result = caseJdlMaxBytesValidator(jdlMaxBytesValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_RELATIONSHIPS:
      {
        JdlRelationships jdlRelationships = (JdlRelationships)theEObject;
        T result = caseJdlRelationships(jdlRelationships);
        if (result == null) result = caseJdlFeature(jdlRelationships);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_RELATIONSHIP:
      {
        JdlRelationship jdlRelationship = (JdlRelationship)theEObject;
        T result = caseJdlRelationship(jdlRelationship);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_RELATIONSHIP_NAME:
      {
        JdlRelationshipName jdlRelationshipName = (JdlRelationshipName)theEObject;
        T result = caseJdlRelationshipName(jdlRelationshipName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_ENUM_TYPE:
      {
        JdlEnumType jdlEnumType = (JdlEnumType)theEObject;
        T result = caseJdlEnumType(jdlEnumType);
        if (result == null) result = caseJdlFeature(jdlEnumType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_GENERATION_SETTING:
      {
        JdlGenerationSetting jdlGenerationSetting = (JdlGenerationSetting)theEObject;
        T result = caseJdlGenerationSetting(jdlGenerationSetting);
        if (result == null) result = caseJdlFeature(jdlGenerationSetting);
        if (result == null) result = caseJdlGenerationSettingType(jdlGenerationSetting);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_GENERATION_SETTING_TYPE:
      {
        JdlGenerationSettingType jdlGenerationSettingType = (JdlGenerationSettingType)theEObject;
        T result = caseJdlGenerationSettingType(jdlGenerationSettingType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_ENTITY_INCLUSION:
      {
        JdlEntityInclusion jdlEntityInclusion = (JdlEntityInclusion)theEObject;
        T result = caseJdlEntityInclusion(jdlEntityInclusion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_ENTITY_EXCLUSION:
      {
        JdlEntityExclusion jdlEntityExclusion = (JdlEntityExclusion)theEObject;
        T result = caseJdlEntityExclusion(jdlEntityExclusion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_WILDCARD_PREDICATE:
      {
        JdlWildcardPredicate jdlWildcardPredicate = (JdlWildcardPredicate)theEObject;
        T result = caseJdlWildcardPredicate(jdlWildcardPredicate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.JDL_PAGINATE_TYPE:
      {
        JdlPaginateType jdlPaginateType = (JdlPaginateType)theEObject;
        T result = caseJdlPaginateType(jdlPaginateType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Domain Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Domain Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlDomainModel(JdlDomainModel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Feature</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Feature</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlFeature(JdlFeature object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlEntity(JdlEntity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlEntityField(JdlEntityField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Field Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Field Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlFieldType(JdlFieldType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Validators</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Validators</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlStringValidators(JdlStringValidators object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Numeric Validators</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Numeric Validators</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlNumericValidators(JdlNumericValidators object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Blob Validators</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Blob Validators</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlBlobValidators(JdlBlobValidators object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Required Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Required Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlRequiredValidator(JdlRequiredValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Min Length Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Min Length Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlMinLengthValidator(JdlMinLengthValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Max Length Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Max Length Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlMaxLengthValidator(JdlMaxLengthValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pattern Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pattern Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlPatternValidator(JdlPatternValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Min Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Min Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlMinValidator(JdlMinValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Max Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Max Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlMaxValidator(JdlMaxValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Min Bytes Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Min Bytes Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlMinBytesValidator(JdlMinBytesValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Max Bytes Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Max Bytes Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlMaxBytesValidator(JdlMaxBytesValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Relationships</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Relationships</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlRelationships(JdlRelationships object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Relationship</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Relationship</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlRelationship(JdlRelationship object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Relationship Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Relationship Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlRelationshipName(JdlRelationshipName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enum Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enum Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlEnumType(JdlEnumType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Generation Setting</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Generation Setting</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlGenerationSetting(JdlGenerationSetting object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Generation Setting Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Generation Setting Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlGenerationSettingType(JdlGenerationSettingType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Inclusion</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Inclusion</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlEntityInclusion(JdlEntityInclusion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Exclusion</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Exclusion</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlEntityExclusion(JdlEntityExclusion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Wildcard Predicate</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Wildcard Predicate</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlWildcardPredicate(JdlWildcardPredicate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Paginate Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Paginate Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJdlPaginateType(JdlPaginateType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //JdlSwitch
