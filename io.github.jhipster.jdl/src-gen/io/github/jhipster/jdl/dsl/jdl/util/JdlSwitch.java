/**
 * generated by Xtext 2.10.0
 */
package io.github.jhipster.jdl.dsl.jdl.util;

import io.github.jhipster.jdl.dsl.jdl.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see io.github.jhipster.jdl.dsl.jdl.JdlPackage
 * @generated
 */
public class JdlSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static JdlPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JdlSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = JdlPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case JdlPackage.DOMAIN_MODEL:
      {
        DomainModel domainModel = (DomainModel)theEObject;
        T result = caseDomainModel(domainModel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.ELEMENTS:
      {
        Elements elements = (Elements)theEObject;
        T result = caseElements(elements);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.ENTITY:
      {
        Entity entity = (Entity)theEObject;
        T result = caseEntity(entity);
        if (result == null) result = caseElements(entity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.FIELD:
      {
        Field field = (Field)theEObject;
        T result = caseField(field);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.ENUM_FIELD:
      {
        EnumField enumField = (EnumField)theEObject;
        T result = caseEnumField(enumField);
        if (result == null) result = caseField(enumField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.STRING_FIELD:
      {
        StringField stringField = (StringField)theEObject;
        T result = caseStringField(stringField);
        if (result == null) result = caseField(stringField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.NUMERIC_FIELD:
      {
        NumericField numericField = (NumericField)theEObject;
        T result = caseNumericField(numericField);
        if (result == null) result = caseField(numericField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.INTEGER_FIELD:
      {
        IntegerField integerField = (IntegerField)theEObject;
        T result = caseIntegerField(integerField);
        if (result == null) result = caseNumericField(integerField);
        if (result == null) result = caseField(integerField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.LONG_FIELD:
      {
        LongField longField = (LongField)theEObject;
        T result = caseLongField(longField);
        if (result == null) result = caseNumericField(longField);
        if (result == null) result = caseField(longField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.BIG_DECIMAL_FIELD:
      {
        BigDecimalField bigDecimalField = (BigDecimalField)theEObject;
        T result = caseBigDecimalField(bigDecimalField);
        if (result == null) result = caseNumericField(bigDecimalField);
        if (result == null) result = caseField(bigDecimalField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.FLOAT_FIELD:
      {
        FloatField floatField = (FloatField)theEObject;
        T result = caseFloatField(floatField);
        if (result == null) result = caseNumericField(floatField);
        if (result == null) result = caseField(floatField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.DOUBLE_FIELD:
      {
        DoubleField doubleField = (DoubleField)theEObject;
        T result = caseDoubleField(doubleField);
        if (result == null) result = caseNumericField(doubleField);
        if (result == null) result = caseField(doubleField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.BOOLEAN_FIELD:
      {
        BooleanField booleanField = (BooleanField)theEObject;
        T result = caseBooleanField(booleanField);
        if (result == null) result = caseField(booleanField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.DATE_FIELD:
      {
        DateField dateField = (DateField)theEObject;
        T result = caseDateField(dateField);
        if (result == null) result = caseField(dateField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.LOCAL_DATE_FIELD:
      {
        LocalDateField localDateField = (LocalDateField)theEObject;
        T result = caseLocalDateField(localDateField);
        if (result == null) result = caseDateField(localDateField);
        if (result == null) result = caseField(localDateField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.ZONED_DATE_TIME_FIELD:
      {
        ZonedDateTimeField zonedDateTimeField = (ZonedDateTimeField)theEObject;
        T result = caseZonedDateTimeField(zonedDateTimeField);
        if (result == null) result = caseDateField(zonedDateTimeField);
        if (result == null) result = caseField(zonedDateTimeField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.BINARY_LARGE_OBJECT_FIELD:
      {
        BinaryLargeObjectField binaryLargeObjectField = (BinaryLargeObjectField)theEObject;
        T result = caseBinaryLargeObjectField(binaryLargeObjectField);
        if (result == null) result = caseField(binaryLargeObjectField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.BLOB_FIELD:
      {
        BlobField blobField = (BlobField)theEObject;
        T result = caseBlobField(blobField);
        if (result == null) result = caseBinaryLargeObjectField(blobField);
        if (result == null) result = caseField(blobField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.ANY_BLOB_FIELD:
      {
        AnyBlobField anyBlobField = (AnyBlobField)theEObject;
        T result = caseAnyBlobField(anyBlobField);
        if (result == null) result = caseBinaryLargeObjectField(anyBlobField);
        if (result == null) result = caseField(anyBlobField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.IMAGE_BLOB_FIELD:
      {
        ImageBlobField imageBlobField = (ImageBlobField)theEObject;
        T result = caseImageBlobField(imageBlobField);
        if (result == null) result = caseBinaryLargeObjectField(imageBlobField);
        if (result == null) result = caseField(imageBlobField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.REQUIRED_VALIDATOR:
      {
        RequiredValidator requiredValidator = (RequiredValidator)theEObject;
        T result = caseRequiredValidator(requiredValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.MIN_LENGTH_VALIDATOR:
      {
        MinLengthValidator minLengthValidator = (MinLengthValidator)theEObject;
        T result = caseMinLengthValidator(minLengthValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.MAX_LENGTH_VALIDATOR:
      {
        MaxLengthValidator maxLengthValidator = (MaxLengthValidator)theEObject;
        T result = caseMaxLengthValidator(maxLengthValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.PATTERN_VALIDATOR:
      {
        PatternValidator patternValidator = (PatternValidator)theEObject;
        T result = casePatternValidator(patternValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.MIN_VALIDATOR:
      {
        MinValidator minValidator = (MinValidator)theEObject;
        T result = caseMinValidator(minValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.MAX_VALIDATOR:
      {
        MaxValidator maxValidator = (MaxValidator)theEObject;
        T result = caseMaxValidator(maxValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.MIN_BYTES_VALIDATOR:
      {
        MinBytesValidator minBytesValidator = (MinBytesValidator)theEObject;
        T result = caseMinBytesValidator(minBytesValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.MAX_BYTES_VALIDATOR:
      {
        MaxBytesValidator maxBytesValidator = (MaxBytesValidator)theEObject;
        T result = caseMaxBytesValidator(maxBytesValidator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.STRING_VALIDATORS:
      {
        StringValidators stringValidators = (StringValidators)theEObject;
        T result = caseStringValidators(stringValidators);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.NUMERIC_VALIDATORS:
      {
        NumericValidators numericValidators = (NumericValidators)theEObject;
        T result = caseNumericValidators(numericValidators);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.BLOB_VALIDATORS:
      {
        BlobValidators blobValidators = (BlobValidators)theEObject;
        T result = caseBlobValidators(blobValidators);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.RELATIONSHIPS:
      {
        Relationships relationships = (Relationships)theEObject;
        T result = caseRelationships(relationships);
        if (result == null) result = caseElements(relationships);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.RELATIONSHIP:
      {
        Relationship relationship = (Relationship)theEObject;
        T result = caseRelationship(relationship);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.RELATIONSHIP_NAME:
      {
        RelationshipName relationshipName = (RelationshipName)theEObject;
        T result = caseRelationshipName(relationshipName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.ENUM_TYPE:
      {
        EnumType enumType = (EnumType)theEObject;
        T result = caseEnumType(enumType);
        if (result == null) result = caseElements(enumType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.GENERATION_SETTING:
      {
        GenerationSetting generationSetting = (GenerationSetting)theEObject;
        T result = caseGenerationSetting(generationSetting);
        if (result == null) result = caseElements(generationSetting);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.SERVICE_GENERATION_SETTING:
      {
        ServiceGenerationSetting serviceGenerationSetting = (ServiceGenerationSetting)theEObject;
        T result = caseServiceGenerationSetting(serviceGenerationSetting);
        if (result == null) result = caseGenerationSetting(serviceGenerationSetting);
        if (result == null) result = caseElements(serviceGenerationSetting);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.DTO_GENERATION_SETTING:
      {
        DTOGenerationSetting dtoGenerationSetting = (DTOGenerationSetting)theEObject;
        T result = caseDTOGenerationSetting(dtoGenerationSetting);
        if (result == null) result = caseGenerationSetting(dtoGenerationSetting);
        if (result == null) result = caseElements(dtoGenerationSetting);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.PAGINATE_GENERATION_SETTING:
      {
        PaginateGenerationSetting paginateGenerationSetting = (PaginateGenerationSetting)theEObject;
        T result = casePaginateGenerationSetting(paginateGenerationSetting);
        if (result == null) result = caseGenerationSetting(paginateGenerationSetting);
        if (result == null) result = caseElements(paginateGenerationSetting);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.PAGINATE_TYPE:
      {
        PaginateType paginateType = (PaginateType)theEObject;
        T result = casePaginateType(paginateType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JdlPackage.ANGULAR_SUFFIX_GENERATION_SETTING:
      {
        AngularSuffixGenerationSetting angularSuffixGenerationSetting = (AngularSuffixGenerationSetting)theEObject;
        T result = caseAngularSuffixGenerationSetting(angularSuffixGenerationSetting);
        if (result == null) result = caseGenerationSetting(angularSuffixGenerationSetting);
        if (result == null) result = caseElements(angularSuffixGenerationSetting);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Domain Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Domain Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDomainModel(DomainModel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Elements</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Elements</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseElements(Elements object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntity(Entity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseField(Field object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enum Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enum Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnumField(EnumField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringField(StringField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Numeric Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Numeric Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNumericField(NumericField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integer Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integer Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegerField(IntegerField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Long Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Long Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLongField(LongField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Big Decimal Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Big Decimal Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBigDecimalField(BigDecimalField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Float Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Float Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFloatField(FloatField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Double Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Double Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDoubleField(DoubleField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Boolean Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Boolean Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBooleanField(BooleanField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Date Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Date Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDateField(DateField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Local Date Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Local Date Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLocalDateField(LocalDateField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Zoned Date Time Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Zoned Date Time Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseZonedDateTimeField(ZonedDateTimeField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Binary Large Object Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Binary Large Object Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBinaryLargeObjectField(BinaryLargeObjectField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Blob Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Blob Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBlobField(BlobField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Any Blob Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Any Blob Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAnyBlobField(AnyBlobField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Image Blob Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Image Blob Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImageBlobField(ImageBlobField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Required Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Required Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRequiredValidator(RequiredValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Min Length Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Min Length Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMinLengthValidator(MinLengthValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Max Length Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Max Length Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMaxLengthValidator(MaxLengthValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pattern Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pattern Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePatternValidator(PatternValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Min Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Min Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMinValidator(MinValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Max Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Max Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMaxValidator(MaxValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Min Bytes Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Min Bytes Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMinBytesValidator(MinBytesValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Max Bytes Validator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Max Bytes Validator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMaxBytesValidator(MaxBytesValidator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Validators</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Validators</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringValidators(StringValidators object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Numeric Validators</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Numeric Validators</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNumericValidators(NumericValidators object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Blob Validators</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Blob Validators</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBlobValidators(BlobValidators object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Relationships</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Relationships</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRelationships(Relationships object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Relationship</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Relationship</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRelationship(Relationship object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Relationship Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Relationship Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRelationshipName(RelationshipName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enum Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enum Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnumType(EnumType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Generation Setting</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Generation Setting</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGenerationSetting(GenerationSetting object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Service Generation Setting</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Service Generation Setting</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseServiceGenerationSetting(ServiceGenerationSetting object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DTO Generation Setting</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DTO Generation Setting</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDTOGenerationSetting(DTOGenerationSetting object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Paginate Generation Setting</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Paginate Generation Setting</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePaginateGenerationSetting(PaginateGenerationSetting object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Paginate Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Paginate Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePaginateType(PaginateType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Angular Suffix Generation Setting</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Angular Suffix Generation Setting</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAngularSuffixGenerationSetting(AngularSuffixGenerationSetting object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //JdlSwitch
