/*
 * generated by Xtext 2.10.0
 */
grammar PsiInternalJDL;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package io.github.jhipster.jdl.dsl.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package io.github.jhipster.jdl.dsl.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import io.github.jhipster.jdl.dsl.idea.lang.JDLElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import io.github.jhipster.jdl.dsl.services.JDLGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected JDLGrammarAccess grammarAccess;

	protected JDLElementTypeProvider elementTypeProvider;

	public PsiInternalJDLParser(PsiBuilder builder, TokenStream input, JDLElementTypeProvider elementTypeProvider, JDLGrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
		this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "DomainModel";
	}

}

//Entry rule entryRuleDomainModel
entryRuleDomainModel returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getDomainModelElementType()); }
	iv_ruleDomainModel=ruleDomainModel
	{ $current=$iv_ruleDomainModel.current; }
	EOF;

// Rule DomainModel
ruleDomainModel returns [Boolean current=false]
:
	(
		(
			{
				markComposite(elementTypeProvider.getDomainModel_ElementsElementsParserRuleCall_0ElementType());
			}
			lv_elements_0_0=ruleElements
			{
				doneComposite();
				if(!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
		)
	)*
;

//Entry rule entryRuleElements
entryRuleElements returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getElementsElementType()); }
	iv_ruleElements=ruleElements
	{ $current=$iv_ruleElements.current; }
	EOF;

// Rule Elements
ruleElements returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getElements_EntityParserRuleCall_0ElementType());
		}
		this_Entity_0=ruleEntity
		{
			$current = $this_Entity_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getElements_RelationshipsParserRuleCall_1ElementType());
		}
		this_Relationships_1=ruleRelationships
		{
			$current = $this_Relationships_1.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getElements_GenerationSettingParserRuleCall_2ElementType());
		}
		this_GenerationSetting_2=ruleGenerationSetting
		{
			$current = $this_GenerationSetting_2.current;
			doneComposite();
		}
	)
;

//Entry rule entryRuleEntity
entryRuleEntity returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getEntityElementType()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getEntity_EntityKeyword_0ElementType());
		}
		otherlv_0='entity'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getEntity_NameIDTerminalRuleCall_1_0ElementType());
				}
				lv_name_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_1_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getEntity_LeftCurlyBracketKeyword_2ElementType());
		}
		otherlv_2='{'
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getEntity_FieldsFieldParserRuleCall_3_0ElementType());
				}
				lv_fields_3_0=ruleField
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getEntity_CommaKeyword_4_0ElementType());
			}
			otherlv_4=','
			{
				doneLeaf(otherlv_4);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getEntity_FieldsFieldParserRuleCall_4_1_0ElementType());
					}
					lv_fields_5_0=ruleField
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
		{
			markLeaf(elementTypeProvider.getEntity_RightCurlyBracketKeyword_5ElementType());
		}
		otherlv_6='}'
		{
			doneLeaf(otherlv_6);
		}
	)
;

//Entry rule entryRuleField
entryRuleField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getFieldElementType()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getField_StringFieldParserRuleCall_0ElementType());
		}
		this_StringField_0=ruleStringField
		{
			$current = $this_StringField_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getField_NumericFieldParserRuleCall_1ElementType());
		}
		this_NumericField_1=ruleNumericField
		{
			$current = $this_NumericField_1.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getField_BooleanFieldParserRuleCall_2ElementType());
		}
		this_BooleanField_2=ruleBooleanField
		{
			$current = $this_BooleanField_2.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getField_DateFieldParserRuleCall_3ElementType());
		}
		this_DateField_3=ruleDateField
		{
			$current = $this_DateField_3.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getField_BinaryLargeObjectFieldParserRuleCall_4ElementType());
		}
		this_BinaryLargeObjectField_4=ruleBinaryLargeObjectField
		{
			$current = $this_BinaryLargeObjectField_4.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getField_EnumFieldParserRuleCall_5ElementType());
		}
		this_EnumField_5=ruleEnumField
		{
			$current = $this_EnumField_5.current;
			doneComposite();
		}
	)
;

//Entry rule entryRuleEnumField
entryRuleEnumField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getEnumFieldElementType()); }
	iv_ruleEnumField=ruleEnumField
	{ $current=$iv_ruleEnumField.current; }
	EOF;

// Rule EnumField
ruleEnumField returns [Boolean current=false]
:
	(
		(
			{
				if (!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
			{
				markLeaf(elementTypeProvider.getEnumField_EnumTypeEnumTypeCrossReference_0ElementType());
			}
			otherlv_0=RULE_ID
			{
				doneLeaf(otherlv_0);
			}
		)
	)
;

//Entry rule entryRuleStringField
entryRuleStringField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getStringFieldElementType()); }
	iv_ruleStringField=ruleStringField
	{ $current=$iv_ruleStringField.current; }
	EOF;

// Rule StringField
ruleStringField returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getStringField_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getStringField_StringKeyword_1ElementType());
		}
		otherlv_1='String'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getStringField_ValidatorsStringValidatorsParserRuleCall_2_0ElementType());
				}
				lv_validators_2_0=ruleStringValidators
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleNumericField
entryRuleNumericField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getNumericFieldElementType()); }
	iv_ruleNumericField=ruleNumericField
	{ $current=$iv_ruleNumericField.current; }
	EOF;

// Rule NumericField
ruleNumericField returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getNumericField_IntegerFieldParserRuleCall_0ElementType());
		}
		this_IntegerField_0=ruleIntegerField
		{
			$current = $this_IntegerField_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getNumericField_LongFieldParserRuleCall_1ElementType());
		}
		this_LongField_1=ruleLongField
		{
			$current = $this_LongField_1.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getNumericField_BigDecimalFieldParserRuleCall_2ElementType());
		}
		this_BigDecimalField_2=ruleBigDecimalField
		{
			$current = $this_BigDecimalField_2.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getNumericField_FloatFieldParserRuleCall_3ElementType());
		}
		this_FloatField_3=ruleFloatField
		{
			$current = $this_FloatField_3.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getNumericField_DoubleFieldParserRuleCall_4ElementType());
		}
		this_DoubleField_4=ruleDoubleField
		{
			$current = $this_DoubleField_4.current;
			doneComposite();
		}
	)
;

//Entry rule entryRuleIntegerField
entryRuleIntegerField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getIntegerFieldElementType()); }
	iv_ruleIntegerField=ruleIntegerField
	{ $current=$iv_ruleIntegerField.current; }
	EOF;

// Rule IntegerField
ruleIntegerField returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getIntegerField_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getIntegerField_IntegerKeyword_1ElementType());
		}
		otherlv_1='Integer'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getIntegerField_ValidatorsNumericValidatorsParserRuleCall_2_0ElementType());
				}
				lv_validators_2_0=ruleNumericValidators
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleLongField
entryRuleLongField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getLongFieldElementType()); }
	iv_ruleLongField=ruleLongField
	{ $current=$iv_ruleLongField.current; }
	EOF;

// Rule LongField
ruleLongField returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getLongField_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getLongField_LongKeyword_1ElementType());
		}
		otherlv_1='Long'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getLongField_ValidatorsNumericValidatorsParserRuleCall_2_0ElementType());
				}
				lv_validators_2_0=ruleNumericValidators
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleBigDecimalField
entryRuleBigDecimalField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getBigDecimalFieldElementType()); }
	iv_ruleBigDecimalField=ruleBigDecimalField
	{ $current=$iv_ruleBigDecimalField.current; }
	EOF;

// Rule BigDecimalField
ruleBigDecimalField returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getBigDecimalField_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getBigDecimalField_BigDecimalKeyword_1ElementType());
		}
		otherlv_1='BigDecimal'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getBigDecimalField_ValidatorsNumericValidatorsParserRuleCall_2_0ElementType());
				}
				lv_validators_2_0=ruleNumericValidators
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleFloatField
entryRuleFloatField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getFloatFieldElementType()); }
	iv_ruleFloatField=ruleFloatField
	{ $current=$iv_ruleFloatField.current; }
	EOF;

// Rule FloatField
ruleFloatField returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getFloatField_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getFloatField_FloatKeyword_1ElementType());
		}
		otherlv_1='Float'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getFloatField_ValidatorsNumericValidatorsParserRuleCall_2_0ElementType());
				}
				lv_validators_2_0=ruleNumericValidators
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleDoubleField
entryRuleDoubleField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getDoubleFieldElementType()); }
	iv_ruleDoubleField=ruleDoubleField
	{ $current=$iv_ruleDoubleField.current; }
	EOF;

// Rule DoubleField
ruleDoubleField returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getDoubleField_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getDoubleField_DoubleKeyword_1ElementType());
		}
		otherlv_1='Double'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getDoubleField_ValidatorsNumericValidatorsParserRuleCall_2_0ElementType());
				}
				lv_validators_2_0=ruleNumericValidators
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleBooleanField
entryRuleBooleanField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getBooleanFieldElementType()); }
	iv_ruleBooleanField=ruleBooleanField
	{ $current=$iv_ruleBooleanField.current; }
	EOF;

// Rule BooleanField
ruleBooleanField returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getBooleanField_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getBooleanField_BooleanKeyword_1ElementType());
		}
		otherlv_1='Boolean'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getBooleanField_ValidatorsRequiredValidatorParserRuleCall_2_0ElementType());
				}
				lv_validators_2_0=ruleRequiredValidator
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleDateField
entryRuleDateField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getDateFieldElementType()); }
	iv_ruleDateField=ruleDateField
	{ $current=$iv_ruleDateField.current; }
	EOF;

// Rule DateField
ruleDateField returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getDateField_LocalDateFieldParserRuleCall_0ElementType());
		}
		this_LocalDateField_0=ruleLocalDateField
		{
			$current = $this_LocalDateField_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getDateField_ZonedDateTimeFieldParserRuleCall_1ElementType());
		}
		this_ZonedDateTimeField_1=ruleZonedDateTimeField
		{
			$current = $this_ZonedDateTimeField_1.current;
			doneComposite();
		}
	)
;

//Entry rule entryRuleLocalDateField
entryRuleLocalDateField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getLocalDateFieldElementType()); }
	iv_ruleLocalDateField=ruleLocalDateField
	{ $current=$iv_ruleLocalDateField.current; }
	EOF;

// Rule LocalDateField
ruleLocalDateField returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getLocalDateField_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getLocalDateField_LocalDateKeyword_1ElementType());
		}
		otherlv_1='LocalDate'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getLocalDateField_ValidatorsRequiredValidatorParserRuleCall_2_0ElementType());
				}
				lv_validators_2_0=ruleRequiredValidator
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleZonedDateTimeField
entryRuleZonedDateTimeField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getZonedDateTimeFieldElementType()); }
	iv_ruleZonedDateTimeField=ruleZonedDateTimeField
	{ $current=$iv_ruleZonedDateTimeField.current; }
	EOF;

// Rule ZonedDateTimeField
ruleZonedDateTimeField returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getZonedDateTimeField_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getZonedDateTimeField_ZonedDateTimeKeyword_1ElementType());
		}
		otherlv_1='ZonedDateTime'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getZonedDateTimeField_ValidatorsRequiredValidatorParserRuleCall_2_0ElementType());
				}
				lv_validators_2_0=ruleRequiredValidator
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleBinaryLargeObjectField
entryRuleBinaryLargeObjectField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getBinaryLargeObjectFieldElementType()); }
	iv_ruleBinaryLargeObjectField=ruleBinaryLargeObjectField
	{ $current=$iv_ruleBinaryLargeObjectField.current; }
	EOF;

// Rule BinaryLargeObjectField
ruleBinaryLargeObjectField returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getBinaryLargeObjectField_BlobFieldParserRuleCall_0ElementType());
		}
		this_BlobField_0=ruleBlobField
		{
			$current = $this_BlobField_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getBinaryLargeObjectField_AnyBlobFieldParserRuleCall_1ElementType());
		}
		this_AnyBlobField_1=ruleAnyBlobField
		{
			$current = $this_AnyBlobField_1.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getBinaryLargeObjectField_ImageBlobFieldParserRuleCall_2ElementType());
		}
		this_ImageBlobField_2=ruleImageBlobField
		{
			$current = $this_ImageBlobField_2.current;
			doneComposite();
		}
	)
;

//Entry rule entryRuleBlobField
entryRuleBlobField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getBlobFieldElementType()); }
	iv_ruleBlobField=ruleBlobField
	{ $current=$iv_ruleBlobField.current; }
	EOF;

// Rule BlobField
ruleBlobField returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getBlobField_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getBlobField_BlobKeyword_1ElementType());
		}
		otherlv_1='Blob'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getBlobField_ValidatorsBlobValidatorsParserRuleCall_2_0ElementType());
				}
				lv_validators_2_0=ruleBlobValidators
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleAnyBlobField
entryRuleAnyBlobField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getAnyBlobFieldElementType()); }
	iv_ruleAnyBlobField=ruleAnyBlobField
	{ $current=$iv_ruleAnyBlobField.current; }
	EOF;

// Rule AnyBlobField
ruleAnyBlobField returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getAnyBlobField_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getAnyBlobField_AnyBlobKeyword_1ElementType());
		}
		otherlv_1='AnyBlob'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getAnyBlobField_ValidatorsBlobValidatorsParserRuleCall_2_0ElementType());
				}
				lv_validators_2_0=ruleBlobValidators
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleImageBlobField
entryRuleImageBlobField returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getImageBlobFieldElementType()); }
	iv_ruleImageBlobField=ruleImageBlobField
	{ $current=$iv_ruleImageBlobField.current; }
	EOF;

// Rule ImageBlobField
ruleImageBlobField returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getImageBlobField_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getImageBlobField_ImageBlobKeyword_1ElementType());
		}
		otherlv_1='ImageBlob'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getImageBlobField_ValidatorsBlobValidatorsParserRuleCall_2_0ElementType());
				}
				lv_validators_2_0=ruleBlobValidators
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleRequiredValidator
entryRuleRequiredValidator returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getRequiredValidatorElementType()); }
	iv_ruleRequiredValidator=ruleRequiredValidator
	{ $current=$iv_ruleRequiredValidator.current; }
	EOF;

// Rule RequiredValidator
ruleRequiredValidator returns [Boolean current=false]
:
	(
		(
			{
				markLeaf(elementTypeProvider.getRequiredValidator_RequiredRequiredKeyword_0ElementType());
			}
			lv_required_0_0='required'
			{
				doneLeaf(lv_required_0_0);
			}
			{
				if (!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
		)
	)
;

//Entry rule entryRuleMinLengthValidator
entryRuleMinLengthValidator returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getMinLengthValidatorElementType()); }
	iv_ruleMinLengthValidator=ruleMinLengthValidator
	{ $current=$iv_ruleMinLengthValidator.current; }
	EOF;

// Rule MinLengthValidator
ruleMinLengthValidator returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getMinLengthValidator_MinlengthKeyword_0ElementType());
		}
		otherlv_0='minlength'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getMinLengthValidator_LeftParenthesisKeyword_1ElementType());
		}
		otherlv_1='('
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getMinLengthValidator_ValueINTTerminalRuleCall_2_0ElementType());
				}
				lv_value_2_0=RULE_INT
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_value_2_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getMinLengthValidator_RightParenthesisKeyword_3ElementType());
		}
		otherlv_3=')'
		{
			doneLeaf(otherlv_3);
		}
	)
;

//Entry rule entryRuleMaxLengthValidator
entryRuleMaxLengthValidator returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getMaxLengthValidatorElementType()); }
	iv_ruleMaxLengthValidator=ruleMaxLengthValidator
	{ $current=$iv_ruleMaxLengthValidator.current; }
	EOF;

// Rule MaxLengthValidator
ruleMaxLengthValidator returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getMaxLengthValidator_MaxlengthKeyword_0ElementType());
		}
		otherlv_0='maxlength'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getMaxLengthValidator_LeftParenthesisKeyword_1ElementType());
		}
		otherlv_1='('
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getMaxLengthValidator_ValueINTTerminalRuleCall_2_0ElementType());
				}
				lv_value_2_0=RULE_INT
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_value_2_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getMaxLengthValidator_RightParenthesisKeyword_3ElementType());
		}
		otherlv_3=')'
		{
			doneLeaf(otherlv_3);
		}
	)
;

//Entry rule entryRulePatternValidator
entryRulePatternValidator returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getPatternValidatorElementType()); }
	iv_rulePatternValidator=rulePatternValidator
	{ $current=$iv_rulePatternValidator.current; }
	EOF;

// Rule PatternValidator
rulePatternValidator returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getPatternValidator_PatternKeyword_0ElementType());
		}
		otherlv_0='pattern'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getPatternValidator_LeftParenthesisKeyword_1ElementType());
		}
		otherlv_1='('
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getPatternValidator_ValueSTRINGTerminalRuleCall_2_0ElementType());
				}
				lv_value_2_0=RULE_STRING
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_value_2_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getPatternValidator_RightParenthesisKeyword_3ElementType());
		}
		otherlv_3=')'
		{
			doneLeaf(otherlv_3);
		}
	)
;

//Entry rule entryRuleMinValidator
entryRuleMinValidator returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getMinValidatorElementType()); }
	iv_ruleMinValidator=ruleMinValidator
	{ $current=$iv_ruleMinValidator.current; }
	EOF;

// Rule MinValidator
ruleMinValidator returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getMinValidator_MinKeyword_0ElementType());
		}
		otherlv_0='min'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getMinValidator_LeftParenthesisKeyword_1ElementType());
		}
		otherlv_1='('
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getMinValidator_ValueINTTerminalRuleCall_2_0ElementType());
				}
				lv_value_2_0=RULE_INT
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_value_2_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getMinValidator_RightParenthesisKeyword_3ElementType());
		}
		otherlv_3=')'
		{
			doneLeaf(otherlv_3);
		}
	)
;

//Entry rule entryRuleMaxValidator
entryRuleMaxValidator returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getMaxValidatorElementType()); }
	iv_ruleMaxValidator=ruleMaxValidator
	{ $current=$iv_ruleMaxValidator.current; }
	EOF;

// Rule MaxValidator
ruleMaxValidator returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getMaxValidator_MaxKeyword_0ElementType());
		}
		otherlv_0='max'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getMaxValidator_LeftParenthesisKeyword_1ElementType());
		}
		otherlv_1='('
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getMaxValidator_ValueINTTerminalRuleCall_2_0ElementType());
				}
				lv_value_2_0=RULE_INT
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_value_2_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getMaxValidator_RightParenthesisKeyword_3ElementType());
		}
		otherlv_3=')'
		{
			doneLeaf(otherlv_3);
		}
	)
;

//Entry rule entryRuleMinBytesValidator
entryRuleMinBytesValidator returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getMinBytesValidatorElementType()); }
	iv_ruleMinBytesValidator=ruleMinBytesValidator
	{ $current=$iv_ruleMinBytesValidator.current; }
	EOF;

// Rule MinBytesValidator
ruleMinBytesValidator returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getMinBytesValidator_MinbytesKeyword_0ElementType());
		}
		otherlv_0='minbytes'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getMinBytesValidator_LeftParenthesisKeyword_1ElementType());
		}
		otherlv_1='('
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getMinBytesValidator_ValueINTTerminalRuleCall_2_0ElementType());
				}
				lv_value_2_0=RULE_INT
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_value_2_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getMinBytesValidator_RightParenthesisKeyword_3ElementType());
		}
		otherlv_3=')'
		{
			doneLeaf(otherlv_3);
		}
	)
;

//Entry rule entryRuleMaxBytesValidator
entryRuleMaxBytesValidator returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getMaxBytesValidatorElementType()); }
	iv_ruleMaxBytesValidator=ruleMaxBytesValidator
	{ $current=$iv_ruleMaxBytesValidator.current; }
	EOF;

// Rule MaxBytesValidator
ruleMaxBytesValidator returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getMaxBytesValidator_MaxbytesKeyword_0ElementType());
		}
		otherlv_0='maxbytes'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getMaxBytesValidator_LeftParenthesisKeyword_1ElementType());
		}
		otherlv_1='('
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getMaxBytesValidator_ValueINTTerminalRuleCall_2_0ElementType());
				}
				lv_value_2_0=RULE_INT
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_value_2_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getMaxBytesValidator_RightParenthesisKeyword_3ElementType());
		}
		otherlv_3=')'
		{
			doneLeaf(otherlv_3);
		}
	)
;

//Entry rule entryRuleStringValidators
entryRuleStringValidators returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getStringValidatorsElementType()); }
	iv_ruleStringValidators=ruleStringValidators
	{ $current=$iv_ruleStringValidators.current; }
	EOF;

// Rule StringValidators
ruleStringValidators returns [Boolean current=false]
:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getStringValidators_RequiredRequiredValidatorParserRuleCall_0_0ElementType());
				}
				lv_required_0_0=ruleRequiredValidator
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getStringValidators_MinLengthMinLengthValidatorParserRuleCall_1_0ElementType());
				}
				lv_minLength_1_0=ruleMinLengthValidator
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			(
				{
					markComposite(elementTypeProvider.getStringValidators_MaxlengthMaxLengthValidatorParserRuleCall_2_0ElementType());
				}
				lv_maxlength_2_0=ruleMaxLengthValidator
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			(
				{
					markComposite(elementTypeProvider.getStringValidators_PatternPatternValidatorParserRuleCall_3_0ElementType());
				}
				lv_pattern_3_0=rulePatternValidator
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleNumericValidators
entryRuleNumericValidators returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getNumericValidatorsElementType()); }
	iv_ruleNumericValidators=ruleNumericValidators
	{ $current=$iv_ruleNumericValidators.current; }
	EOF;

// Rule NumericValidators
ruleNumericValidators returns [Boolean current=false]
:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getNumericValidators_RequiredRequiredValidatorParserRuleCall_0_0ElementType());
				}
				lv_required_0_0=ruleRequiredValidator
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getNumericValidators_MinlengthMinValidatorParserRuleCall_1_0ElementType());
				}
				lv_minlength_1_0=ruleMinValidator
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			(
				{
					markComposite(elementTypeProvider.getNumericValidators_MaxlengthMaxValidatorParserRuleCall_2_0ElementType());
				}
				lv_maxlength_2_0=ruleMaxValidator
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleBlobValidators
entryRuleBlobValidators returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getBlobValidatorsElementType()); }
	iv_ruleBlobValidators=ruleBlobValidators
	{ $current=$iv_ruleBlobValidators.current; }
	EOF;

// Rule BlobValidators
ruleBlobValidators returns [Boolean current=false]
:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getBlobValidators_RequiredRequiredValidatorParserRuleCall_0_0ElementType());
				}
				lv_required_0_0=ruleRequiredValidator
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getBlobValidators_MinbytesMinBytesValidatorParserRuleCall_1_0ElementType());
				}
				lv_minbytes_1_0=ruleMinBytesValidator
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			(
				{
					markComposite(elementTypeProvider.getBlobValidators_MaxbytesMaxBytesValidatorParserRuleCall_2_0ElementType());
				}
				lv_maxbytes_2_0=ruleMaxBytesValidator
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleRelationships
entryRuleRelationships returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getRelationshipsElementType()); }
	iv_ruleRelationships=ruleRelationships
	{ $current=$iv_ruleRelationships.current; }
	EOF;

// Rule Relationships
ruleRelationships returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getRelationships_RelationshipKeyword_0ElementType());
		}
		otherlv_0='relationship'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getRelationships_CardinalityCardinalityEnumRuleCall_1_0ElementType());
				}
				lv_cardinality_1_0=ruleCardinality
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getRelationships_LeftCurlyBracketKeyword_2ElementType());
		}
		otherlv_2='{'
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getRelationships_RelationshipsRelationshipParserRuleCall_3_0ElementType());
				}
				lv_relationships_3_0=ruleRelationship
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)*
		{
			markLeaf(elementTypeProvider.getRelationships_RightCurlyBracketKeyword_4ElementType());
		}
		otherlv_4='}'
		{
			doneLeaf(otherlv_4);
		}
	)
;

//Entry rule entryRuleRelationship
entryRuleRelationship returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getRelationshipElementType()); }
	iv_ruleRelationship=ruleRelationship
	{ $current=$iv_ruleRelationship.current; }
	EOF;

// Rule Relationship
ruleRelationship returns [Boolean current=false]
:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getRelationship_FromEntityEntityParserRuleCall_0_0ElementType());
				}
				lv_fromEntity_0_0=ruleEntity
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getRelationship_FromNameRelationshipNameParserRuleCall_1_0ElementType());
				}
				lv_fromName_1_0=ruleRelationshipName
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		{
			markLeaf(elementTypeProvider.getRelationship_ToKeyword_2ElementType());
		}
		otherlv_2='to'
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getRelationship_ToEntityEntityParserRuleCall_3_0ElementType());
				}
				lv_toEntity_3_0=ruleEntity
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getRelationship_ToNameRelationshipNameParserRuleCall_4_0ElementType());
				}
				lv_toName_4_0=ruleRelationshipName
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleRelationshipName
entryRuleRelationshipName returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getRelationshipNameElementType()); }
	iv_ruleRelationshipName=ruleRelationshipName
	{ $current=$iv_ruleRelationshipName.current; }
	EOF;

// Rule RelationshipName
ruleRelationshipName returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getRelationshipName_LeftCurlyBracketKeyword_0ElementType());
		}
		otherlv_0='{'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getRelationshipName_NameIDTerminalRuleCall_1_0ElementType());
				}
				lv_name_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_1_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getRelationshipName_RightCurlyBracketKeyword_2ElementType());
		}
		otherlv_2='}'
		{
			doneLeaf(otherlv_2);
		}
	)
;

//Entry rule entryRuleGenerationSetting
entryRuleGenerationSetting returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getGenerationSettingElementType()); }
	iv_ruleGenerationSetting=ruleGenerationSetting
	{ $current=$iv_ruleGenerationSetting.current; }
	EOF;

// Rule GenerationSetting
ruleGenerationSetting returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getGenerationSetting_ServiceGenerationSettingParserRuleCall_0ElementType());
		}
		this_ServiceGenerationSetting_0=ruleServiceGenerationSetting
		{
			$current = $this_ServiceGenerationSetting_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getGenerationSetting_DTOGenerationSettingParserRuleCall_1ElementType());
		}
		this_DTOGenerationSetting_1=ruleDTOGenerationSetting
		{
			$current = $this_DTOGenerationSetting_1.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getGenerationSetting_PaginateGenerationSettingParserRuleCall_2ElementType());
		}
		this_PaginateGenerationSetting_2=rulePaginateGenerationSetting
		{
			$current = $this_PaginateGenerationSetting_2.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getGenerationSetting_AngularSuffixGenerationSettingParserRuleCall_3ElementType());
		}
		this_AngularSuffixGenerationSetting_3=ruleAngularSuffixGenerationSetting
		{
			$current = $this_AngularSuffixGenerationSetting_3.current;
			doneComposite();
		}
	)
;

//Entry rule entryRuleServiceGenerationSetting
entryRuleServiceGenerationSetting returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getServiceGenerationSettingElementType()); }
	iv_ruleServiceGenerationSetting=ruleServiceGenerationSetting
	{ $current=$iv_ruleServiceGenerationSetting.current; }
	EOF;

// Rule ServiceGenerationSetting
ruleServiceGenerationSetting returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getServiceGenerationSetting_ServiceKeyword_0ElementType());
		}
		otherlv_0='service'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getServiceGenerationSetting_EntitiesIDTerminalRuleCall_1_0ElementType());
				}
				lv_entities_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_entities_1_0);
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getServiceGenerationSetting_CommaKeyword_2_0ElementType());
			}
			otherlv_2=','
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getServiceGenerationSetting_EntitiesIDTerminalRuleCall_2_1_0ElementType());
					}
					lv_entities_3_0=RULE_ID
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_entities_3_0);
					}
				)
			)
		)*
		{
			markLeaf(elementTypeProvider.getServiceGenerationSetting_WithKeyword_3ElementType());
		}
		otherlv_4='with'
		{
			doneLeaf(otherlv_4);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getServiceGenerationSetting_ServiceTypeServiceTypeEnumRuleCall_4_0ElementType());
				}
				lv_serviceType_5_0=ruleServiceType
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRuleDTOGenerationSetting
entryRuleDTOGenerationSetting returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getDTOGenerationSettingElementType()); }
	iv_ruleDTOGenerationSetting=ruleDTOGenerationSetting
	{ $current=$iv_ruleDTOGenerationSetting.current; }
	EOF;

// Rule DTOGenerationSetting
ruleDTOGenerationSetting returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getDTOGenerationSetting_DtoKeyword_0ElementType());
		}
		otherlv_0='dto'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getDTOGenerationSetting_EntitiesIDTerminalRuleCall_1_0ElementType());
				}
				lv_entities_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_entities_1_0);
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getDTOGenerationSetting_CommaKeyword_2_0ElementType());
			}
			otherlv_2=','
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getDTOGenerationSetting_EntitiesIDTerminalRuleCall_2_1_0ElementType());
					}
					lv_entities_3_0=RULE_ID
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_entities_3_0);
					}
				)
			)
		)*
		{
			markLeaf(elementTypeProvider.getDTOGenerationSetting_WithKeyword_3ElementType());
		}
		otherlv_4='with'
		{
			doneLeaf(otherlv_4);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getDTOGenerationSetting_DtoTypeDTOTypeEnumRuleCall_4_0ElementType());
				}
				lv_dtoType_5_0=ruleDTOType
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRulePaginateGenerationSetting
entryRulePaginateGenerationSetting returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getPaginateGenerationSettingElementType()); }
	iv_rulePaginateGenerationSetting=rulePaginateGenerationSetting
	{ $current=$iv_rulePaginateGenerationSetting.current; }
	EOF;

// Rule PaginateGenerationSetting
rulePaginateGenerationSetting returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getPaginateGenerationSetting_PaginateKeyword_0ElementType());
		}
		otherlv_0='paginate'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getPaginateGenerationSetting_EntitiesIDTerminalRuleCall_1_0ElementType());
				}
				lv_entities_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_entities_1_0);
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getPaginateGenerationSetting_CommaKeyword_2_0ElementType());
			}
			otherlv_2=','
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getPaginateGenerationSetting_EntitiesIDTerminalRuleCall_2_1_0ElementType());
					}
					lv_entities_3_0=RULE_ID
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_entities_3_0);
					}
				)
			)
		)*
		{
			markLeaf(elementTypeProvider.getPaginateGenerationSetting_WithKeyword_3ElementType());
		}
		otherlv_4='with'
		{
			doneLeaf(otherlv_4);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getPaginateGenerationSetting_PaginateTypePaginateTypeEnumRuleCall_4_0ElementType());
				}
				lv_paginateType_5_0=rulePaginateType
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRuleAngularSuffixGenerationSetting
entryRuleAngularSuffixGenerationSetting returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getAngularSuffixGenerationSettingElementType()); }
	iv_ruleAngularSuffixGenerationSetting=ruleAngularSuffixGenerationSetting
	{ $current=$iv_ruleAngularSuffixGenerationSetting.current; }
	EOF;

// Rule AngularSuffixGenerationSetting
ruleAngularSuffixGenerationSetting returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getAngularSuffixGenerationSetting_AngularSuffixKeyword_0ElementType());
		}
		otherlv_0='angularSuffix'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getAngularSuffixGenerationSetting_EntitiesIDTerminalRuleCall_1_0ElementType());
				}
				lv_entities_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_entities_1_0);
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getAngularSuffixGenerationSetting_CommaKeyword_2_0ElementType());
			}
			otherlv_2=','
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getAngularSuffixGenerationSetting_EntitiesIDTerminalRuleCall_2_1_0ElementType());
					}
					lv_entities_3_0=RULE_ID
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_entities_3_0);
					}
				)
			)
		)*
		{
			markLeaf(elementTypeProvider.getAngularSuffixGenerationSetting_WithKeyword_3ElementType());
		}
		otherlv_4='with'
		{
			doneLeaf(otherlv_4);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getAngularSuffixGenerationSetting_IdIDTerminalRuleCall_4_0ElementType());
				}
				lv_id_5_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_id_5_0);
				}
			)
		)
	)
;

// Rule Cardinality
ruleCardinality returns [Boolean current=false]
:
	(
		(
			{
				markLeaf(elementTypeProvider.getCardinality_OneToManyEnumLiteralDeclaration_0ElementType());
			}
			enumLiteral_0='OneToMany'
			{
				doneLeaf(enumLiteral_0);
			}
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getCardinality_ManyToOneEnumLiteralDeclaration_1ElementType());
			}
			enumLiteral_1='ManyToOne'
			{
				doneLeaf(enumLiteral_1);
			}
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getCardinality_OneToOneEnumLiteralDeclaration_2ElementType());
			}
			enumLiteral_2='OneToOne'
			{
				doneLeaf(enumLiteral_2);
			}
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getCardinality_ManyToManyEnumLiteralDeclaration_3ElementType());
			}
			enumLiteral_3='ManyToMany'
			{
				doneLeaf(enumLiteral_3);
			}
		)
	)
;

// Rule ServiceType
ruleServiceType returns [Boolean current=false]
:
	(
		(
			{
				markLeaf(elementTypeProvider.getServiceType_ServiceClassEnumLiteralDeclaration_0ElementType());
			}
			enumLiteral_0='serviceClass'
			{
				doneLeaf(enumLiteral_0);
			}
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getServiceType_ServiceImplEnumLiteralDeclaration_1ElementType());
			}
			enumLiteral_1='serviceImpl'
			{
				doneLeaf(enumLiteral_1);
			}
		)
	)
;

// Rule DTOType
ruleDTOType returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getDTOType_MapstructEnumLiteralDeclarationElementType());
		}
		enumLiteral_0='mapstruct'
		{
			doneLeaf(enumLiteral_0);
		}
	)
;

// Rule PaginateType
rulePaginateType returns [Boolean current=false]
:
	(
		(
			{
				markLeaf(elementTypeProvider.getPaginateType_PaginationEnumLiteralDeclaration_0ElementType());
			}
			enumLiteral_0='pagination'
			{
				doneLeaf(enumLiteral_0);
			}
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getPaginateType_InfiniteScrollEnumLiteralDeclaration_1ElementType());
			}
			enumLiteral_1='infiniteScroll'
			{
				doneLeaf(enumLiteral_1);
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
